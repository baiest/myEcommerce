DROP TABLE IF EXISTS
users
,clients
,categories
,products
,product_image
,client_cart
,client_buy_product
,product_has_category
CASCADE;

CREATE TABLE Users (
	user_email VARCHAR(100) PRIMARY KEY NOT NULL
	,user_name VARCHAR(100) NOT NULL
	,user_lastname VARCHAR(100)
	,user_password VARCHAR(100)
	,user_rol CHAR DEFAULT 'c'
	,created TIMESTAMP DEFAULT NOW()
	,updated TIMESTAMP DEFAULT NOW()

);

CREATE TABLE Clients (
	client_id VARCHAR(100) UNIQUE NOT NULL
	,client_address VARCHAR(150)
	,FOREIGN KEY (client_id) REFERENCES Users(user_email)
);

CREATE TABLE Categories (
	category_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
	,category_name VARCHAR(150) NOT NULL
	,created TIMESTAMP DEFAULT NOW()
	,updated TIMESTAMP DEFAULT NOW()
);

CREATE TABLE Products (
	product_id VARCHAR(50) PRIMARY KEY NOT NULL
	,product_name VARCHAR(150)NOT NULL
	,product_quantity INTEGER NOT NULL
	,product_price FLOAT NOT NULL
	,created TIMESTAMP DEFAULT NOW()
	,updated TIMESTAMP DEFAULT NOW()
);

CREATE TABLE product_image(
	product_id VARCHAR(50)
	,product_image VARCHAR(50)
	,FOREIGN KEY (product_id) REFERENCES Products(product_id)
	,PRIMARY KEY(product_id, product_image)
);

CREATE TABLE client_cart(
	client_id VARCHAR(100)
	,product_id VARCHAR(50)
	,quantity INTEGER NOT NULL
	,FOREIGN KEY (product_id) REFERENCES Products(product_id)
	,FOREIGN KEY (client_id) REFERENCES Clients(client_id)
	,PRIMARY KEY(client_id, product_id)
);

CREATE TABLE client_buy_product(
	client_id VARCHAR(100) NOT NULL
	,product_id VARCHAR(50) NOT NULL
	,quantity INTEGER NOT NULL
	,created TIMESTAMP DEFAULT NOW()
	,updated TIMESTAMP DEFAULT NOW()
	,FOREIGN KEY (client_id) REFERENCES Clients(client_id)
	,FOREIGN KEY (product_id) REFERENCES Products(product_id)
);

CREATE TABLE product_has_category(
	product_id VARCHAR(50) NOT NULL
	,category_id INTEGER NOT NULL
	,FOREIGN KEY (product_id) REFERENCES Products(product_id)
	,FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);